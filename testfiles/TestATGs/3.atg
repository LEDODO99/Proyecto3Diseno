COMPILER MyCOCOR
(.//Especificacion de Funciones.)
CHARACTERS

letter= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".
digit= "0123456789".

cr = CHR(13).
lf = CHR(10).
tab = CHR(9).
ignore = cr+lf+tab.
comillas = CHR(34).
stringletter = ANY-comillas-ignore.

operadores ="+-=()[]{}|.<>".
MyANY = ANY-operadores.
ANY2 = ANY.

TOKENS

ident = letter{letter|digit} EXCEPT KEYWORDS.
string = comillas stringletter{stringletter} comillas.

char = "'"["/"]letter"'".
charnumber = "CHR("digit{digit}")".
charinterval = "CHR("digit{digit}")""..""CHR("digit{digit}")".

nontoken = MyANY.
startcode ="(.".
endcode=".)".

IGNORE SET ignore

PRODUCTIONS

MyCOCOR= 				(.StringRef CompilerName = new StringRef();
					  StringRef EndName = new StringRef();.)
	"COMPILER" 
	Ident< CompilerName>		(.System.out.println("Nombre Inicial del Compilador: "+CompilerName.getValue());.) 
	[Codigo]
	Body
	"END" Ident< EndName>	(.System.out.println("Nombre Final del Compilador:"+EndName.getValue());.) 
.

Body = 
	Characters 
	[Keywords] 
	Tokens 
	Productions  	
.


Characters =				(.StringRef CharName = new StringRef();
					   IntegerRef Counter = new IntegerRef();.)

	"CHARACTERS"			(.System.out.println("LEYENDO CHARACTERS");.)
	{
		Ident<CharName>	(.Counter.add(1);System.out.println("Char Set "+Counter.getValue()+": "+CharName.getValue());.)
		"="
		CharSet			
		{
			"+"CharSet
			|
			"-"CharSet
		}
		"."
	}
.
			 
Keywords = 				(.StringRef KeyName = new StringRef();
					  StringRef StringValue = new StringRef();
    					  IntegerRef Counter = new IntegerRef();.)

	"KEYWORDS"			(.System.out.println("LEYENDO KEYWORDS");.)
	{
		
		Ident< KeyName>	(.Counter.add(1);System.out.println("KeyWord "+Counter.getValue()+": "+KeyName.getValue());.)
		"="
		String< StringValue>
		"."

	}

.


Tokens =				(.StringRef TokenName = new StringRef();
					  int Counter = 0;.)
	
	"TOKENS"			(.System.out.println("LEYENDO TOKENS");.)
	{
		Ident< TokenName>	(.Counter++;System.out.println("Token "+Counter+": "+TokenName.getValue());.)
		"="
		TokenExpr
		[ExceptKeyword]
		"."

	}

.


Productions = 				(.int Counter = 0;.)
	
	"PRODUCTIONS"			(.StringRef ProdName = new StringRef();
					  System.out.println("LEYENDO PRODUCTIONS");.)
	{
		Ident< ProdName>	(.Counter++;System.out.println("Production "+Counter+": "+ProdName.getValue());.)
		[Atributos]
		"="
		[Codigo]
		ProductionExpr
		"."

	}
.

ExceptKeyword= 
	"EXCEPT"
	"KEYWORDS"
.


ProductionExpr =
	ProdTerm
	{
	"|"
	ProdTerm
	}
.

ProdTerm =
	ProdFactor
	{
	ProdFactor
	}
.

ProdFactor =
	(
	SymbolProd
	|
	"("ProductionExpr")"
	|
	"["ProductionExpr"]"
	|
	"{"ProductionExpr"}"
	)
	[Codigo]
.



SymbolProd =			(.StringRef SV = new StringRef();
				  StringRef IN = new StringRef();.)
	(
	String< SV>		(.System.out.println("String en Production: "+SV.getValue());.)
	|
	char
	|
	Ident< IN>		(.System.out.println("Identificador en Production: "+IN.getValue());.)
	[Atributos] 
	)
.

Codigo =
	startcode
	{ ANY2 }
	endcode
.

Atributos =
	"<"
	{ANY2}
	">"
.
	


TokenExpr=
	TokenTerm
	{
	"|"
	TokenTerm
	}
.

TokenTerm=
	TokenFactor
	{
	TokenFactor	
	}
.

TokenFactor=
	(
	SimbolToken
	|
	"("TokenExpr")"
	|
	"["TokenExpr"]"
	|
	"{"TokenExpr"}"
	)
.

SimbolToken =			(.StringRef IdentName = new StringRef();
				  StringRef StringValue = new StringRef();.)		
	(
	String< StringValue>
	|
	char
	|
	Ident< IdentName>	(.System.out.println("Identificador en Token: "+IdentName.getValue());.)
	)
.



CharSet= 			(.StringRef IdentName = new StringRef();
				  StringRef StringValue = new StringRef();.)	
	(
	String< StringValue>
	|
	Char
	|
	"ANY"
	|
	Ident< IdentName>	(.System.out.println("Identificador en CharSet: "+IdentName.getValue());.)
	)
	
.


Char=
	(
	char
	|
	charnumber
	|
	charinterval
	)
.


String< StringRef S>=
	string		(.S.assignValue(lastToken.getValue());.)
.

Ident< StringRef S>=
	ident		(.S.assignValue(lastToken.getValue());.)
.


END MyCOCOR